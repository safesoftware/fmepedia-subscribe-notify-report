#! <?xml version="1.0" encoding="iso-8859-1" ?>
#! <WORKSPACE
#    
#    
#    Windows command-line to run this workspace:
#    
#    
#    fme.exe report_web_form_bufferer.fmw
#          --SourceDataset_TEXTLINE Z:\DonStuff\DemoData\2012Demos\PushNotification\Data\trafficAccident.txt
#          --DestDataset_TEXTLINE C:\temp\bufferout.txt
#          --bufferamount 1000
#          --Server_Host dondemo
#          --User_Name don
#          --Password ********
#          --Notification_Topic TrafficAccident
#    
#    
#! LAST_SAVE_BUILD="FME(R) 2012 SP2 (20120410 - Build 12235 - WIN32)"
#! MAX_LOG_FEATURES="200"
#! SOURCE="NONE"
#! LEGAL_TERMS_CONDITIONS=""
#! END_TCL=""
#! DESTINATION="NONE"
#! SHOW_BOOKMARKS="true"
#! GRID_VISIBLE="false"
#! SHOW_ANNOTATIONS="true"
#! FME_SERVER_SERVICES=""
#! LOG_MAX_RECORDED_FEATURES="200"
#! END_PYTHON=""
#! CATEGORY=""
#! REQUIREMENTS_KEYWORD=""
#! GRID_HEIGHT="50"
#! FME_REPROJECTION_ENGINE="FME"
#! FME_BUILD_NUM="12235"
#! SHOW_INFO_NODES="true"
#! BEGIN_PYTHON=""
#! DESCRIPTION=""
#! GRID_SNAPTO="false"
#! GRID_WIDTH="50"
#! BEGIN_TCL=""
#! FME_STROKE_MAX_DEVIATION="0"
#! LOG_FILE=""
#! HISTORY=""
#! VIEW_POSITION="0 0"
#! SOURCE_ROUTING_FILE=""
#! ZOOM_SCALE="100"
#! PASSWORD=""
#! VIEW_PAGE_BREAKS="false"
#! WORKSPACE_VERSION="1"
#! DESTINATION_ROUTING_FILE=""
#! LAST_SAVE_DATE="2012-04-26T11:53:04"
#! FME_GEOMETRY_HANDLING="Enhanced"
#! TITLE=""
#! USAGE=""
#! IGNORE_READER_FAILURE="No"
#! REQUIREMENTS=""
#! WARN_INVALID_XFORM_PARAM="Yes"
#! REDIRECT_TERMINATORS="NONE"
#! ATTR_TYPE_ENCODING="SDF"
#! >
#! <DATASETS>
#! <DATASET
#! IS_SOURCE="true"
#! ROLE="READER"
#! FORMAT="TEXTLINE"
#! DATASET="$(SourceDataset_TEXTLINE)"
#! KEYWORD="TEXTLINE_1"
#! MULTI_GEOM_ALLOWED="false"
#! ATTR_MAX_LENGTH="60"
#! ATTR_CASE="ANY"
#! ALLOWED_FEAT_TYPES=""
#! WRITE_DEFS="false"
#! DEFLINE_TEMPLATE=""
#! DEFLINE_ATTRS="false"
#! EXPOSABLE_ATTRS="fme_type char(50) fme_text_string char(50) multi_reader_full_id number(11,0) fme_feature_type char(50) fme_basename char(50) multi_reader_type char(50) fme_geometry fme_char(50) multi_reader_keyword char(50) fme_sweep_angle number(31,15) fme_rotation number(31,15) text_line_eol char(10) fme_secondary_axis number(31,15) fme_fill_color char(50) fme_dataset char(50) fme_primary_axis number(31,15) fme_start_angle number(31,15) fme_text_size number(31,15) text_line_type char(64) fme_color char(50) multi_reader_id number(11,0) text_line_length number(6,0) text_line_number number(6,0)"
#! DEFLINE_PARMS=""
#! ATTR_INDEX_TYPES=""
#! ATTR_NAME_INVALID_CHARS=""
#! SUPPORTS_FEATURE_TYPE_FANOUT="true"
#! ENABLED="true"
#! DYNAMIC_FEATURE_TYPES_LIST_ON_MERGE="true"
#! GENERATE_FME_BUILD_NUM="12075"
#! MIN_FEATURES=""
#! START_FEATURE=""
#! MAX_FEATURES=""
#! COORDSYS=""
#! FEATURE_TYPES=""
#! >
#! <METAFILE_PARAMETER
#! NAME="MIME_TYPE"
#! VALUE=""
#! />
#! </DATASET>
#! <DATASET
#! IS_SOURCE="false"
#! ROLE="WRITER"
#! FORMAT="TEXTLINE"
#! DATASET="$(DestDataset_TEXTLINE)"
#! KEYWORD="TEXTLINE_2"
#! MULTI_GEOM_ALLOWED="true"
#! ATTR_MAX_LENGTH="60"
#! ATTR_CASE="ANY"
#! ALLOWED_FEAT_TYPES="text_line"
#! WRITE_DEFS="false"
#! DEFLINE_TEMPLATE=""
#! DEFLINE_ATTRS="false"
#! EXPOSABLE_ATTRS="fme_type char(50) fme_text_string char(50) fme_feature_type char(50) fme_basename char(50) fme_geometry fme_char(50) fme_sweep_angle number(31,15) fme_rotation number(31,15) text_line_eol char(10) fme_secondary_axis number(31,15) fme_fill_color char(50) fme_dataset char(50) fme_primary_axis number(31,15) fme_start_angle number(31,15) fme_text_size number(31,15) text_line_type char(64) fme_color char(50)"
#! DEFLINE_PARMS=""
#! ATTR_INDEX_TYPES=""
#! ATTR_NAME_INVALID_CHARS=""
#! SUPPORTS_FEATURE_TYPE_FANOUT="false"
#! ENABLED="true"
#! DYNAMIC_FEATURE_TYPES_LIST_ON_MERGE="true"
#! GENERATE_FME_BUILD_NUM="12075"
#! FANOUT_SUFFIX=""
#! FANOUT_ID_ATTR=""
#! COORDSYS=""
#! FANOUT="No"
#! FANOUT_DIRECTORY=""
#! FANOUT_PREFIX=""
#! >
#! <METAFILE_PARAMETER
#! NAME="MIME_TYPE"
#! VALUE="text/plain"
#! />
#! </DATASET>
#! </DATASETS>
#! <DATA_TYPES>
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="char(width)"
#! FME_TYPE="fme_char(width)"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="char(width)"
#! FME_TYPE="fme_varchar(width)"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="buffer"
#! FME_TYPE="fme_buffer"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="char(20)"
#! FME_TYPE="fme_datetime"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="char(12)"
#! FME_TYPE="fme_time"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="date"
#! FME_TYPE="fme_date"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="number(31,15)"
#! FME_TYPE="fme_real64"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="number(15,7)"
#! FME_TYPE="fme_real32"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="number(11,0)"
#! FME_TYPE="fme_int32"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="logical"
#! FME_TYPE="fme_boolean"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="number(6,0)"
#! FME_TYPE="fme_int16"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="number(width,decimal)"
#! FME_TYPE="fme_decimal(width,decimal)"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="char(width)"
#! FME_TYPE="fme_char(width)"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="char(width)"
#! FME_TYPE="fme_varchar(width)"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="buffer"
#! FME_TYPE="fme_buffer"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="char(20)"
#! FME_TYPE="fme_datetime"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="char(12)"
#! FME_TYPE="fme_time"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="date"
#! FME_TYPE="fme_date"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="number(31,15)"
#! FME_TYPE="fme_real64"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="number(15,7)"
#! FME_TYPE="fme_real32"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="number(11,0)"
#! FME_TYPE="fme_int32"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="logical"
#! FME_TYPE="fme_boolean"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="number(6,0)"
#! FME_TYPE="fme_int16"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="number(width,decimal)"
#! FME_TYPE="fme_decimal(width,decimal)"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="char(8)"
#! FME_TYPE="fme_date"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="number(11,0)"
#! FME_TYPE="fme_uint32"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="number(11,0)"
#! FME_TYPE="fme_int64"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="number(11,0)"
#! FME_TYPE="fme_uint64"
#! FORMAT="TEXTLINE"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="number(6,0)"
#! FME_TYPE="fme_uint16"
#! FORMAT="TEXTLINE"
#! />
#! </DATA_TYPES>
#! <GEOM_TYPES>
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_no_geom"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_point"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_line"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_area"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_text"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_ellipse"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_arc"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_rectangle"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_rounded_rectangle"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_collection"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_raster"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_surface"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_solid"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_point_cloud"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_no_geom"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_point"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_line"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_area"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_text"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_ellipse"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_arc"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_rectangle"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_rounded_rectangle"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_collection"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_raster"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_surface"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_solid"
#! FORMAT="TEXTLINE"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="text_line_none"
#! FME_TYPE="fme_point_cloud"
#! FORMAT="TEXTLINE"
#! />
#! </GEOM_TYPES>
#! <FEATURE_TYPES>
#! <FEATURE_TYPE
#! IS_SOURCE="true"
#! NODE_NAME="text_line"
#! IS_EDITABLE="false"
#! IDENTIFIER="0"
#! FEAT_GEOMTYPE="text_line_none"
#! POSITION="84 -128"
#! ORDER="9"
#! COLLAPSED="true"
#! KEYWORD="TEXTLINE_1"
#! ENABLED="true"
#! HIDDEN_USER_ATTRS=""
#! MERGE="false"
#! MERGE_FILTER=""
#! MERGE_FILTER_TYPE="FILTER_TYPE_GLOB"
#! MERGE_FILTER_CASE_SENSITIVE="false"
#! DYNAMIC_SCHEMA="false"
#! >
#! <FEAT_ATTRIBUTE ATTR_NAME="text_line_data" ATTR_TYPE="buffer"/>
#! </FEATURE_TYPE>
#! <FEATURE_TYPE
#! IS_SOURCE="false"
#! NODE_NAME="text_line"
#! IS_EDITABLE="true"
#! IDENTIFIER="11"
#! FEAT_GEOMTYPE="text_line_none"
#! POSITION="2413 -149"
#! ORDER="14"
#! COLLAPSED="false"
#! KEYWORD="TEXTLINE_2"
#! ENABLED="true"
#! FANOUT="No"
#! FANOUT_ID_ATTR=""
#! >
#! <FEAT_ATTRIBUTE ATTR_NAME="text_line_data" ATTR_TYPE="buffer"/>
#! </FEATURE_TYPE>
#! </FEATURE_TYPES>
#! <FMESERVER>
#! <SERVICES>
#! <SERVICE
#! NAME="fmedatastreaming"
#! >
#! <PROPERTIES>
#! <PROPERTY
#! CATEGORY="FMEUSERPROPDATA"
#! NAME="HTTP_DATASET"
#! VALUE="TEXTLINE_1"
#! />
#! <PROPERTY
#! CATEGORY="FMEUSERPROPDATA"
#! NAME="OUTPUT_WRITER"
#! VALUE="TEXTLINE_2"
#! />
#! </PROPERTIES>
#! </SERVICE>
#! <SERVICE
#! NAME="fmejobsubmitter"
#! >
#! <PROPERTIES>
#! <PROPERTY
#! CATEGORY="FMEUSERPROPDATA"
#! NAME="HTTP_DATASET"
#! VALUE="TEXTLINE_1"
#! />
#! </PROPERTIES>
#! </SERVICE>
#! </SERVICES>
#! </FMESERVER>
#! <GLOBAL_PARAMETERS>
#! <GLOBAL_PARAMETER
#! GUI_LINE="GUI MULTIFILE SourceDataset_TEXTLINE Text/Compressed_Text_Files(*.txt;*.txt.gz)|*.txt;*.txt.gz|Text_Files(*.txt)|*.txt|Compressed_Text_Files(*.txt.gz)|*.txt.gz|All_files(*.*)|*.* Source Text File(s):"
#! DEFAULT_VALUE="Z:\DonStuff\DemoData\2012Demos\PushNotification\Data\trafficAccident.txt"
#! IS_STAND_ALONE="false"
#! />
#! <GLOBAL_PARAMETER
#! GUI_LINE="GUI FILENAME DestDataset_TEXTLINE Text/Compressed_Text_Files(*.txt;*.txt.gz)|*.txt;*.txt.gz|Text_Files(*.txt)|*.txt|Compressed_Text_Files(*.txt.gz)|*.txt.gz|All_files(*.*)|*.* Destination Text File File:"
#! DEFAULT_VALUE="C:\temp\bufferout.txt"
#! IS_STAND_ALONE="false"
#! />
#! <GLOBAL_PARAMETER
#! GUI_LINE="GUI FLOAT_OR_ATTR bufferamount Buffer Amount:"
#! DEFAULT_VALUE="1000"
#! IS_STAND_ALONE="false"
#! />
#! <GLOBAL_PARAMETER
#! GUI_LINE="GUI TEXT Server_Host Server Host:"
#! DEFAULT_VALUE="dondemo"
#! IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#! GUI_LINE="GUI OPTIONAL TEXT User_Name User name:"
#! DEFAULT_VALUE="don"
#! IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#! GUI_LINE="GUI OPTIONAL PASSWORD Password Password:"
#! DEFAULT_VALUE="don"
#! IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#! GUI_LINE="GUI OPTIONAL STRING_OR_CHOICE Notification_Topic SAMPLE_TOPIC%JOB_SUCCESS%JOB_FAILURE Notification Topic:"
#! DEFAULT_VALUE="TrafficAccident"
#! IS_STAND_ALONE="true"
#! />
#! </GLOBAL_PARAMETERS>
#! <COMMENTS>
#! </COMMENTS>
#! <CONSTANTS>
#! </CONSTANTS>
#! <BOOKMARKS>
#! <BOOKMARK
#! IDENTIFIER="45"
#! NAME="Generate Feedback to the User!"
#! DESCRIPTION=""
#! TOP_LEFT="590 -7"
#! BOTTOM_RIGHT="2278 -649"
#! STICKY="true"
#! COLOUR="0.189611,0.893582,0.569597"
#! />
#! </BOOKMARKS>
#! <TRANSFORMERS>
#! <TRANSFORMER
#! IDENTIFIER="1"
#! TYPE="GeometryReplacer"
#! VERSION="2"
#! POSITION="670 -128"
#! ORDER="8"
#! PARMS_EDITED="true"
#! ENABLED="true"
#! >
#! <OUTPUT_FEAT NAME="OUTPUT"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="text_line_data" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="KIND_LONG" PARM_VALUE="OGC Well Known Text"/>
#! <XFORM_PARM PARM_NAME="ATTR" PARM_VALUE="text_line_data"/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="GeometryReplacer"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="SRS_AXIS_ORDER_DISPLAY" PARM_VALUE="Automatic"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="5"
#! TYPE="Bufferer"
#! VERSION="5"
#! POSITION="1219 -137"
#! ORDER="10"
#! PARMS_EDITED="true"
#! ENABLED="true"
#! >
#! <OUTPUT_FEAT NAME="BUFFERED"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="text_line_data" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_PARM PARM_NAME="GROUP_BY" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Bufferer"/>
#! <XFORM_PARM PARM_NAME="BUFFSTYLE" PARM_VALUE="CAP_ROUND"/>
#! <XFORM_PARM PARM_NAME="WIDTH" PARM_VALUE="$(bufferamount)"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="ANGLE" PARM_VALUE="22.5"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="14"
#! TYPE="Reprojector"
#! VERSION="3"
#! POSITION="947 -358"
#! ORDER="11"
#! PARMS_EDITED="true"
#! ENABLED="true"
#! >
#! <OUTPUT_FEAT NAME="REPROJECTED"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="text_line_data" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_PARM PARM_NAME="DEST" PARM_VALUE="TX83-C"/>
#! <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="SOURCE" PARM_VALUE="EPSG:4326"/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Reprojector"/>
#! <XFORM_PARM PARM_NAME="RASTER_CELL_SIZE" PARM_VALUE="Preserve Cells"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="INTERPOLATION_TYPE_NAME" PARM_VALUE="Nearest Neighbor"/>
#! <XFORM_PARM PARM_NAME="STROKE_ARCS" PARM_VALUE="Yes"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="17"
#! TYPE="Reprojector"
#! VERSION="3"
#! POSITION="1481 -370"
#! ORDER="12"
#! PARMS_EDITED="true"
#! ENABLED="true"
#! >
#! <OUTPUT_FEAT NAME="REPROJECTED"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="text_line_data" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_PARM PARM_NAME="DEST" PARM_VALUE="EPSG:4326"/>
#! <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="SOURCE" PARM_VALUE="TX83-C"/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Reprojector_2"/>
#! <XFORM_PARM PARM_NAME="RASTER_CELL_SIZE" PARM_VALUE="Preserve Cells"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="INTERPOLATION_TYPE_NAME" PARM_VALUE="Nearest Neighbor"/>
#! <XFORM_PARM PARM_NAME="STROKE_ARCS" PARM_VALUE="Yes"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="8"
#! TYPE="GeometryExtractor"
#! VERSION="2"
#! POSITION="1701 -115"
#! ORDER="13"
#! PARMS_EDITED="true"
#! ENABLED="true"
#! >
#! <OUTPUT_FEAT NAME="OUTPUT"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="text_line_data" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="_geometry" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="KIND_LONG" PARM_VALUE="OGC Well Known Text"/>
#! <XFORM_PARM PARM_NAME="ATTR" PARM_VALUE="_geometry"/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="GeometryExtractor"/>
#! <XFORM_PARM PARM_NAME="OGCVERSION" PARM_VALUE="1.1"/>
#! <XFORM_PARM PARM_NAME="OMIT_NAMESPACES_DISPLAY" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! </TRANSFORMER>
#! </TRANSFORMERS>
#! <FEAT_LINKS>
#! <FEAT_LINK
#! IDENTIFIER="18"
#! SOURCE_NODE="5"
#! TARGET_NODE="17"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="19"
#! SOURCE_NODE="17"
#! TARGET_NODE="8"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="15"
#! SOURCE_NODE="1"
#! TARGET_NODE="14"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="16"
#! SOURCE_NODE="14"
#! TARGET_NODE="5"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="12"
#! SOURCE_NODE="8"
#! TARGET_NODE="11"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="-1"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="37"
#! SOURCE_NODE="0"
#! TARGET_NODE="1"
#! SOURCE_PORT_DESC="-1"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! </FEAT_LINKS>
#! <BREAKPOINTS>
#! </BREAKPOINTS>
#! <ATTR_LINKS>
#! <ATTR_LINK
#! IDENTIFIER="13"
#! SOURCE_NODE="8"
#! TARGET_NODE="11"
#! SOURCE_PORT_DESC="ao 0 1"
#! TARGET_PORT_DESC="0"
#! />
#! </ATTR_LINKS>
#! <SUBDOCUMENTS>
#! </SUBDOCUMENTS>
#! <LOOKUP_TABLES>
#! </LOOKUP_TABLES>
#! </WORKSPACE>
#! 
GUI IGNORE TEXTLINE_IN_READ_WHOLE_FILE_AT_ONCE_TEXTLINE_1,TEXTLINE_IN_READ_BOTTOM_UP_TEXTLINE_1,TEXTLINE_IN__ENCODING_TEXTLINE_1,SourceDataset_TEXTLINE_1,DestDataset_TEXTLINE_2,TEXTLINE_OUT_OVERWRITE_FILE_TEXTLINE_2,TEXTLINE_OUT_ENCODING_TEXTLINE_2,TEXTLINE_OUT_END_OF_LINE_TEXTLINE_2,TEXTLINE_OUT_WRITE_UTF8_BOM_TEXTLINE_2







DEFAULT_MACRO SourceDataset_TEXTLINE Z:\DonStuff\DemoData\2012Demos\PushNotification\Data\trafficAccident.txt
GUI MULTIFILE SourceDataset_TEXTLINE Text/Compressed_Text_Files(*.txt;*.txt.gz)|*.txt;*.txt.gz|Text_Files(*.txt)|*.txt|Compressed_Text_Files(*.txt.gz)|*.txt.gz|All_files(*.*)|*.* Source Text File(s):
DEFAULT_MACRO DestDataset_TEXTLINE C:\temp\bufferout.txt
GUI FILENAME DestDataset_TEXTLINE Text/Compressed_Text_Files(*.txt;*.txt.gz)|*.txt;*.txt.gz|Text_Files(*.txt)|*.txt|Compressed_Text_Files(*.txt.gz)|*.txt.gz|All_files(*.*)|*.* Destination Text File File:
DEFAULT_MACRO bufferamount 1000
GUI FLOAT bufferamount Buffer Amount:
DEFAULT_MACRO Server_Host dondemo
GUI TEXT Server_Host Server Host:
DEFAULT_MACRO User_Name don
GUI OPTIONAL TEXT User_Name User name:
DEFAULT_MACRO Password don
GUI OPTIONAL PASSWORD Password Password:
DEFAULT_MACRO Notification_Topic TrafficAccident
GUI OPTIONAL STRING_OR_CHOICE Notification_Topic SAMPLE_TOPIC%JOB_SUCCESS%JOB_FAILURE Notification Topic:
INCLUDE TCL
proc __FME_ExpandMacros {text {maxlevels 100}} {
   if { $maxlevels <= 0 } { return $text; }
   set pattern [join {{\$} {\([^()$]*\)}} {}]
   set indices [regexp -inline -all -indices $pattern $text]
   if [llength $indices] {
      foreach pair [lreverse $indices] {
         lassign $pair start end
         set replacement {}
         set replacement $::FME_MacroValues([string range $text [expr $start + 2] [expr $end - 1]])
         set text [string replace $text $start $end $replacement]
      }
      return [__FME_ExpandMacros $text [expr $maxlevels - 1]]
   }
   return $text
}

proc __FME_ExpandEnvVars {text {maxlevels 100}} {
   if { $maxlevels <= 0 } { return $text; }
   set pattern [join {{\$} {\{[^\{\}$]*\}}} {}]
   set indices [regexp -inline -all -indices $pattern $text]
   if [llength $indices] {
      foreach pair [lreverse $indices] {
         lassign $pair start end
         set replacement {}
         set replacement $::env([string range $text [expr $start + 2] [expr $end - 1]])
         set text [string replace $text $start $end $replacement]
      }
      return [__FME_ExpandEnvVars $text [expr $maxlevels - 1]]
   }
   return $text
}

proc __FME_EvalAndEncodeMacro {macroName} {
   set macroVal {}
   catch { set macroVal [__FME_ExpandMacros $::FME_MacroValues($macroName)] }
   catch { set macroVal [__FME_ExpandEnvVars $macroVal] }
   return [FME_EncodeText $macroVal]
}
END_INCLUDE
INCLUDE [	puts "MACRO SourceDataset_TEXTLINE__FMEENCODED__ [__FME_EvalAndEncodeMacro SourceDataset_TEXTLINE]" ;   ]

INCLUDE [	puts "MACRO DestDataset_TEXTLINE__FMEENCODED__ [__FME_EvalAndEncodeMacro DestDataset_TEXTLINE]" ;   ]

INCLUDE [	puts "MACRO bufferamount__FMEENCODED__ [__FME_EvalAndEncodeMacro bufferamount]" ;   ]

INCLUDE [	puts "MACRO Server_Host__FMEENCODED__ [__FME_EvalAndEncodeMacro Server_Host]" ;   ]

INCLUDE [	puts "MACRO User_Name__FMEENCODED__ [__FME_EvalAndEncodeMacro User_Name]" ;   ]

INCLUDE [	puts "MACRO Password__FMEENCODED__ [__FME_EvalAndEncodeMacro Password]" ;   ]

INCLUDE [	puts "MACRO Notification_Topic__FMEENCODED__ [__FME_EvalAndEncodeMacro Notification_Topic]" ;   ]

INCLUDE [ if {{$(SourceDataset_TEXTLINE)} == {}} { puts_real {Parameter 'SourceDataset_TEXTLINE' must be given a value.}; exit 1; }; ]
INCLUDE [ if {{$(DestDataset_TEXTLINE)} == {}} { puts_real {Parameter 'DestDataset_TEXTLINE' must be given a value.}; exit 1; }; ]
INCLUDE [ if {{$(bufferamount)} == {}} { puts_real {Parameter 'bufferamount' must be given a value.}; exit 1; }; ]
INCLUDE [ if {{$(Server_Host)} == {}} { puts_real {Parameter 'Server_Host' must be given a value.}; exit 1; }; ]
#! START_HEADER
#! START_WB_HEADER
READER_TYPE TEXTLINE
READER_KEYWORD TEXTLINE_1
READER_GEN_DIRECTIVES READ_WHOLE_FILE_AT_ONCE,NO,_ENCODING,,_MERGE_SCHEMAS,YES,READ_BOTTOM_UP,No
WRITER_TYPE TEXTLINE
WRITER_KEYWORD TEXTLINE_2
#! END_WB_HEADER
#! START_WB_HEADER
MACRO WB_KEYWORD "TEXTLINE_1"
#! END_WB_HEADER
#! START_SOURCE_HEADER TEXTLINE TEXTLINE_1
DEFAULT_MACRO TEXTLINE_IN_READ_WHOLE_FILE_AT_ONCE_TEXTLINE_1 NO
TEXTLINE_1_READ_WHOLE_FILE_AT_ONCE "$(TEXTLINE_IN_READ_WHOLE_FILE_AT_ONCE_TEXTLINE_1)"
GUI ACTIVECHOICE TEXTLINE_IN_READ_WHOLE_FILE_AT_ONCE_TEXTLINE_1 YES,TEXTLINE_IN_READ_BOTTOM_UP%NO Read Whole File at Once:
DEFAULT_MACRO TEXTLINE_IN_READ_BOTTOM_UP_TEXTLINE_1 No
TEXTLINE_1_READ_BOTTOM_UP "$(TEXTLINE_IN_READ_BOTTOM_UP_TEXTLINE_1)"
GUI CHOICE TEXTLINE_IN_READ_BOTTOM_UP_TEXTLINE_1 Yes%No Read Bottom Up:
# =====================================================================
# Allows to force the encoding of source text file
DEFAULT_MACRO TEXTLINE_IN__ENCODING_TEXTLINE_1 
TEXTLINE_1__ENCODING "$(TEXTLINE_IN__ENCODING_TEXTLINE_1)"
GUI OPTIONAL STRING_OR_ENCODING TEXTLINE_IN__ENCODING_TEXTLINE_1 UTF-8%UTF-16LE%UTF-16BE%ANSI%BIG5%SJIS%CP437%CP708%CP720%CP737%CP775%CP850%CP852%CP855%CP857%CP860%CP861%CP862%CP863%CP864%CP865%CP866%CP869%CP932%CP936%CP950%CP1250%CP1251%CP1252%CP1253%CP1254%CP1255%CP1256%CP1257%CP1258%ISO8859-1%ISO8859-2%ISO8859-3%ISO8859-4%ISO8859-5%ISO8859-6%ISO8859-7%ISO8859-8%ISO8859-9%ISO8859-13%ISO8859-15 Character Encoding (optional):
# =====================================================================
# The following GUI line prompts for a file to be used as the source
# TextLine file. The user input is stored in a macro, which is then
# used to define the dataset to be read.
# The dataset this mapping file was generated from was:
#! END_SOURCE_HEADER
#! START_WB_HEADER
DEFAULT_MACRO SourceDataset
INCLUDE [ if {{$(SourceDataset)} != ""} {                        \
 puts {DEFAULT_MACRO SourceDataset_TEXTLINE_1 $(SourceDataset)}     \
 } ]
#! END_WB_HEADER
#! START_SOURCE_HEADER TEXTLINE TEXTLINE_1
DEFAULT_MACRO SourceDataset_TEXTLINE_1 $(SourceDataset_TEXTLINE)
GUI MULTIFILE SourceDataset_TEXTLINE_1 Text/Compressed_Text_Files(*.txt;*.txt.gz)|*.txt;*.txt.gz|Text_Files(*.txt)|*.txt|Compressed_Text_Files(*.txt.gz)|*.txt.gz|All_files(*.*)|*.* Source Text File(s):
TEXTLINE_1_DATASET "$(SourceDataset_TEXTLINE_1)"
#! END_SOURCE_HEADER
#! START_WB_HEADER
MACRO WB_KEYWORD "TEXTLINE_2"
#! END_WB_HEADER
#! START_DEST_HEADER TEXTLINE TEXTLINE_2
# =====================================================================
# The following GUI line prompts for a directory to be used as the
# the destination for the TextLine files. The user input is stored in
# a macro, which is then used to define the dataset to be written.
#! END_DEST_HEADER
#! START_WB_HEADER
DEFAULT_MACRO DestDataset
INCLUDE [ if {"$(DestDataset)" != ""} {                          \
 puts {DEFAULT_MACRO DestDataset_TEXTLINE_2 $(DestDataset)}         \
 } ]
#! END_WB_HEADER
#! START_DEST_HEADER TEXTLINE TEXTLINE_2
DEFAULT_MACRO DestDataset_TEXTLINE_2 $(DestDataset_TEXTLINE)
GUI FILENAME DestDataset_TEXTLINE_2 Text/Compressed_Text_Files(*.txt;*.txt.gz)|*.txt;*.txt.gz|Text_Files(*.txt)|*.txt|Compressed_Text_Files(*.txt.gz)|*.txt.gz|All_files(*.*)|*.* Destination Text File File:
# =====================================================================
# The following GUI line prompts for the overwrite flag. The default is
# YES. Possible values are YES or NO. Any value other than NO or
# no is interpreted as YES.
DEFAULT_MACRO TEXTLINE_OUT_OVERWRITE_FILE_TEXTLINE_2 YES
TEXTLINE_2_OVERWRITE_FILE "$(TEXTLINE_OUT_OVERWRITE_FILE_TEXTLINE_2)"
GUI CHOICE TEXTLINE_OUT_OVERWRITE_FILE_TEXTLINE_2 YES%NO Overwrite Existing File:
# =====================================================================
# Set the type of encoding for the output file
DEFAULT_MACRO TEXTLINE_OUT_ENCODING_TEXTLINE_2 
TEXTLINE_2_ENCODING "$(TEXTLINE_OUT_ENCODING_TEXTLINE_2)"
GUI OPTIONAL STRING_OR_ENCODING TEXTLINE_OUT_ENCODING_TEXTLINE_2 UTF-8%UTF-16LE%UTF-16BE%ANSI%BIG5%SJIS%CP437%CP708%CP720%CP737%CP775%CP850%CP852%CP855%CP857%CP860%CP861%CP862%CP863%CP864%CP865%CP866%CP869%CP932%CP936%CP950%CP1250%CP1251%CP1252%CP1253%CP1254%CP1255%CP1256%CP1257%CP1258%ISO8859-1%ISO8859-2%ISO8859-3%ISO8859-4%ISO8859-5%ISO8859-6%ISO8859-7%ISO8859-8%ISO8859-9%ISO8859-13%ISO8859-15 Character Encoding (optional):
# =====================================================================
# Set line termination character
DEFAULT_MACRO TEXTLINE_OUT_END_OF_LINE_TEXTLINE_2 
TEXTLINE_2_END_OF_LINE "$(TEXTLINE_OUT_END_OF_LINE_TEXTLINE_2)"
GUI OPTIONAL CHOICE TEXTLINE_OUT_END_OF_LINE_TEXTLINE_2 Windows%Unix%Macintosh Line Termination:
# =====================================================================
# Set the mime type. Note -- it is actually only used inside of workspaces
# as a FORMAT_PARAMETER which even then is parsed only by the FME Server
# Repository Manager
DEFAULT_MACRO TEXTLINE_OUT_MIME_TYPE_TEXTLINE_2 text/plain
TEXTLINE_2_MIME_TYPE "$(TEXTLINE_OUT_MIME_TYPE_TEXTLINE_2)"
# =====================================================================
# The following GUI line prompts for the overwrite flag. The default is
# YES. Possible values are YES or NO. Any value other than NO or
# no is interpreted as YES.
DEFAULT_MACRO TEXTLINE_OUT_WRITE_UTF8_BOM_TEXTLINE_2 YES
TEXTLINE_2_WRITE_UTF8_BOM "$(TEXTLINE_OUT_WRITE_UTF8_BOM_TEXTLINE_2)"
GUI CHOICE TEXTLINE_OUT_WRITE_UTF8_BOM_TEXTLINE_2 YES%NO Write UTF-8 Byte Order Mark
TEXTLINE_2_DATASET "$(DestDataset_TEXTLINE_2)"
#! END_DEST_HEADER
#! END_HEADER

LOG_FILENAME "$(FME_MF_DIR)report_web_form_bufferer.log"
LOG_APPEND NO
LOG_MAX_FEATURES 200
LOG_MAX_RECORDED_FEATURES 200
FME_REPROJECTION_ENGINE FME
FME_GEOMETRY_HANDLING Enhanced
FME_STROKE_MAX_DEVIATION 0
LOG_FILTER_MASK -1
DEFAULT_MACRO DATASET_KEYWORD_TEXTLINE_1 TEXTLINE_1
DEFAULT_MACRO DATASET_KEYWORD_TEXTLINE_2 TEXTLINE_2
FME_PASSWORD_PARAMETER_LIST Password
# -------------------------------------------------------------------------

TEXTLINE_1_READER_META_ATTRIBUTES fme_feature_type

# -------------------------------------------------------------------------

MULTI_READER_CONTINUE_ON_READER_FAILURE No

# -------------------------------------------------------------------------

MACRO WORKSPACE_NAME report_web_form_bufferer
MACRO FME_VIEWER_APP fmedatainspector
# -------------------------------------------------------------------------

INCLUDE [ if {[info exists env(TEMP)]}  {set gVisualizerTemp $env(TEMP)}  elseif { $tcl_platform(platform) == "unix" } {set gVisualizerTemp "/tmp"} else {set gVisualizerTemp c:};  regsub -all {[ ,&]} {$(WORKSPACE_NAME)} {_} wsname; set gVisualizerTemp $gVisualizerTemp/${wsname}_[clock format [clock seconds] -format %H%M%S];  puts "MACRO WORKSPACE_TEMP_DIR $gVisualizerTemp"; 
MACRO VISUALIZER_FEATURE_FILE $(WORKSPACE_TEMP_DIR)/inspector.ffs
MACRO VISUALIZER_CREATE_SPATIAL_INDEX YES

# -------------------------------------------------------------------------

Lookup ___KnownFeatureTypes___   text_line yes   "" no
# -------------------------------------------------------------------------

FACTORY_DEF * TestFactory   FACTORY_NAME "Unexpected Input Remover"   INPUT FEATURE_TYPE *   TEST @Lookup(___KnownFeatureTypes___,@FeatureType()) == yes   OUTPUT PASSED FEATURE_TYPE *
# -------------------------------------------------------------------------

FACTORY_DEF * TeeFactory    FACTORY_NAME "Source -> Generic"    INPUT FEATURE_TYPE *    OUTPUT FEATURE_TYPE *       @Transform(TEXTLINE,FME_GENERIC,ALIAS_GEOMETRY)
DEFAULT_MACRO WB_CURRENT_CONTEXT
# -------------------------------------------------------------------------

# First determine which function we are going to be using -- we can do
# this statically at parse time for efficiency sake

MACRO GeometryReplacer_Function
INCLUDE [ if {{wkt} == {fmebinary} } {               puts {MACRO GeometryReplacer_Function @Geometry(FROM_ATTRIBUTE_BINARY,text_line_data) }           } elseif {{wkt} == {fmehex} } {               puts {MACRO GeometryReplacer_Function @Geometry(FROM_ATTRIBUTE_BINARY_HEX,text_line_data) }           } elseif {{wkt} == {fmexml} } {               puts {MACRO GeometryReplacer_Function @Geometry(FROM_ATTRIBUTE,text_line_data) }           } elseif {{wkt} == {fmexmlencoded} } {               puts {MACRO GeometryReplacer_Function @Geometry(FROM_ENCODED_STRING,&text_line_data) }           } elseif {{wkt} == {wkt} ||                      {wkt} == {wkb} ||                      {wkt} == {wkbhex} } {               puts {MACRO GeometryReplacer_Function @OGCGeometry(from_attribute,wkt,text_line_data) }           } elseif {{wkt} == {GEOJSON} ||                     {wkt} == {ESRIJSON} } {               puts {MACRO GeometryReplacer_Function @JSONGeometry(FROM_ATTRIBUTE,wkt,text_line_data) }           } elseif {{wkt} == {GEORSS} } {               puts {MACRO GeometryReplacer_Function @GeoRSSGeometry(FROM_ATTRIBUTE,text_line_data) }           } elseif {{wkt} == {KML} } {               puts {MACRO GeometryReplacer_Function @KMLGeometry(FROM_ATTRIBUTE,text_line_data) }           } elseif {{wkt} == {GML} } {               puts {MACRO GeometryReplacer_Function @GMLGeometry(FROM_ATTRIBUTE,text_line_data,) }           } elseif {{wkt} == {geohash} } {               puts {MACRO GeometryReplacer_Function @GeoHash(FROM_ATTRIBUTE,text_line_data) }           }         ]
FACTORY_DEF * TeeFactory    FACTORY_NAME GeometryReplacer    INPUT  FEATURE_TYPE text_line    OUTPUT FEATURE_TYPE GeometryReplacer_OUTPUT         $(GeometryReplacer_Function)

# -------------------------------------------------------------------------

# Wipe out the source setting if it was untouched from the default setting

DEFAULT_MACRO Reprojector_SOURCE EPSG:4326
INCLUDE [if { {EPSG:4326} == {Read from feature} } {             puts {MACRO Reprojector_SOURCE}          }         ]
FACTORY_DEF * TeeFactory    FACTORY_NAME Reprojector    INPUT  FEATURE_TYPE GeometryReplacer_OUTPUT    OUTPUT FEATURE_TYPE Reprojector_REPROJECTED         @Reproject($(Reprojector_SOURCE),TX83-C,NearestNeighbor,PreserveCells)

# -------------------------------------------------------------------------

FACTORY_DEF * TeeFactory    FACTORY_NAME Bufferer_passer_onner    INPUT  FEATURE_TYPE Reprojector_REPROJECTED    OUTPUT FEATURE_TYPE __to_buffer__

FACTORY_DEF * TeeFactory    FACTORY_NAME Bufferer    INPUT FEATURE_TYPE __to_buffer__    OUTPUT FEATURE_TYPE Bufferer_BUFFERED        @Buffer2(@EvaluateExpression(FLOAT,$(bufferamount__FMEENCODED__),Bufferer),22.5,CAP_ROUND)

# -------------------------------------------------------------------------

# Wipe out the source setting if it was untouched from the default setting

DEFAULT_MACRO Reprojector_2_SOURCE TX83-C
INCLUDE [if { {TX83-C} == {Read from feature} } {             puts {MACRO Reprojector_2_SOURCE}          }         ]
FACTORY_DEF * TeeFactory    FACTORY_NAME Reprojector_2    INPUT  FEATURE_TYPE Bufferer_BUFFERED    OUTPUT FEATURE_TYPE Reprojector_2_REPROJECTED         @Reproject($(Reprojector_2_SOURCE),EPSG:4326,NearestNeighbor,PreserveCells)

# -------------------------------------------------------------------------

# First determine which function we are going to be using -- we can do
# this statically at parse time for efficiency sake

MACRO GeometryExtractor_Function
INCLUDE [ if {{wkt} == {fmebinary} } {               puts {MACRO GeometryExtractor_Function @Geometry(TO_ATTRIBUTE_BINARY,_geometry) }           } elseif {{wkt} == {fmehex} } {               puts {MACRO GeometryExtractor_Function @Geometry(TO_ATTRIBUTE_BINARY_HEX,_geometry) }           } elseif {{wkt} == {fmexml} } {               puts {MACRO GeometryExtractor_Function @Geometry(TO_ATTRIBUTE,_geometry) }           } elseif {{wkt} == {wkt} ||                      {wkt} == {wkb} ||                      {wkt} == {wkbhex} } {               puts {MACRO GeometryExtractor_Function @OGCGeometry(to_attribute,wkt,_geometry,1.1) }           } elseif {{wkt} == {GEOJSON} ||                     {wkt} == {ESRIJSON} } {               puts {MACRO GeometryExtractor_Function @JSONGeometry(TO_ATTRIBUTE,wkt,_geometry) }           } elseif {{wkt} == {KML} } {               puts {MACRO GeometryExtractor_Function @KMLGeometry(TO_ATTRIBUTE,_geometry,<Unused>) }           } elseif {{wkt} == {GEORSS_SIMPLE} } {               puts {MACRO GeometryExtractor_Function @GeoRSSGeometry(TO_ATTRIBUTE,wkt,_geometry,<Unused>) }           } elseif {{wkt} == {GML_3.1.1} ||                      {wkt} == {GML_3.2.1} } {               puts {MACRO GeometryExtractor_Function @GMLGeometry(TO_ATTRIBUTE,wkt,_geometry,<Unused>) }           } elseif {{wkt} == {geohash} } {               puts {MACRO GeometryExtractor_Function @GeoHash(TO_ATTRIBUTE,_geometry) }           }         ]
FACTORY_DEF * TeeFactory    FACTORY_NAME GeometryExtractor    INPUT  FEATURE_TYPE Reprojector_2_REPROJECTED    OUTPUT FEATURE_TYPE GeometryExtractor_OUTPUT         $(GeometryExtractor_Function)

# -------------------------------------------------------------------------

FACTORY_DEF * TeeFactory    FACTORY_NAME "GeometryExtractor_OUTPUT -> text_line Correlator"    INPUT FEATURE_TYPE GeometryExtractor_OUTPUT    OUTPUT FEATURE_TYPE __GO_TO_FINAL_OUTPUT_ROUTER__       @Transform(FME_GENERIC,TEXTLINE)       @CopyAttributes(text_line_data,_geometry)       @SupplyAttributes(__wb_out_feat_type__,text_line)
# -------------------------------------------------------------------------

FACTORY_DEF * TestFactory   FACTORY_NAME "Final Output Feature Type Router"   INPUT FEATURE_TYPE *   TEST @Value(__wb_out_feat_type__) != ""   OUTPUT PASSED FEATURE_TYPE *     @FeatureType(@Value(__wb_out_feat_type__))   OUTPUT FAILED FEATURE_TYPE __nuke_me__ @Tcl2("FME_StatMessage 818059 {@Value(fme_template_feature_type)} 818060 818061 fme_warn")
# -------------------------------------------------------------------------

FACTORY_DEF * TeeFactory   FACTORY_NAME "Final Output Nuker"   INPUT FEATURE_TYPE __nuke_me__

